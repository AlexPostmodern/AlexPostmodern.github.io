git status - просмотр статуса файлов в репозитории
git add test.txt - добавить в очередь для комита какой то файл
git add * - добавить в очередь для комита все изменненые файлы в репозитории
git commit - закомитить
git log - история коммитов
git log --pretty=oneline - в олдну линию каждый коммит
git log ---pretty=format:"%h - %s : %ad [ %an ]" - собственный формат
--date=short - короткий формат даты
git checkout <hash> - смена ветки
gitk - графический интерфейс
git reset - возврат к тому состоянию, к которому мы хотим 
(файла, комита, полностью ветки)
git reset HEAD index.txt - вернуть файл к последнему состоянию(к последнему комиту)
или убрать индексирвоание файла, если изменение не нужны, убрать из очереди комита
вместо хеад можно написать комит, к которому нужно вернуть файл
git checkout index.txt вернет состояние, которое было в полседнем комите
и git уберет последние изменения
git revert HEAD --no-edit - удаление последнего коммита
означает что мы хотим вернуть наш файл к месту (HEAD-самое последнее его состояние)

ЧТОБЫ ВЕРНУТЬ К СОСТОЯНИЮ НА КАКОЙ ТО КОМИТ НУЖНО:

выбрать комит и выбрать файл, который мы хотим вернуть
git reset 9ee76287b738d455cc98018faa25ca2e7bb8bfdc index.txt

подтвердить изменения
git checkout index.txt

сделать коммит
git commit -m "some comment"

git revert --abort  - отмена попытки удаления (при конфликте)
git branch - посомтреть все ветки в локальном репозитории
git checkout -b newbrabch - создание новой ветки с названием newbranch
ls - показывает все файлы в ветке